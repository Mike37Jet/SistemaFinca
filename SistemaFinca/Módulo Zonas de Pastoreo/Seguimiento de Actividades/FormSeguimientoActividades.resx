<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonRegistrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>